/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oecd;

import javax.swing.*;
import java.awt.*;  
import java.awt.event.*;  
import java.lang.Exception;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
//import java.sql.Statement;

public class Companies extends javax.swing.JFrame {

    /* Creates new form Companies */
    public Companies() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jP_companyList = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jT_company = new javax.swing.JTable();
        jBtn_back = new javax.swing.JButton();
        jL_company = new javax.swing.JLabel();
        jBtn_company = new javax.swing.JButton();
        jBtn_mechanic = new javax.swing.JButton();
        jBtn_handyman = new javax.swing.JButton();
        jBtn_policeStation = new javax.swing.JButton();
        jBtn_hospital = new javax.swing.JButton();
        jBtn_search = new javax.swing.JButton();
        jTF_location = new javax.swing.JTextField();
        jBtn_feedback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jT_company.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Company Name", "Service Type", "Address", "City", "State", "Zipcode", "Email"
            }
        ));
        jScrollPane2.setViewportView(jT_company);

        jBtn_back.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_back.setText("Back");
        jBtn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_backActionPerformed(evt);
            }
        });

        jL_company.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jL_company.setText("Company and Services");

        jBtn_company.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_company.setText("View Companies");
        jBtn_company.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_companyActionPerformed(evt);
            }
        });

        jBtn_mechanic.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_mechanic.setText("Mechanic");
        jBtn_mechanic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_mechanicActionPerformed(evt);
            }
        });

        jBtn_handyman.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_handyman.setText("Handyman");
        jBtn_handyman.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_handymanActionPerformed(evt);
            }
        });

        jBtn_policeStation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_policeStation.setText("Police Station");
        jBtn_policeStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_policeStationActionPerformed(evt);
            }
        });

        jBtn_hospital.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_hospital.setText("Hospital");
        jBtn_hospital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_hospitalActionPerformed(evt);
            }
        });

        jBtn_search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_search.setText("Search");
        jBtn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_searchActionPerformed(evt);
            }
        });

        jTF_location.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTF_location.setText("Search City");

        jBtn_feedback.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jBtn_feedback.setText("Send Feedback");
        jBtn_feedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtn_feedbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jP_companyListLayout = new javax.swing.GroupLayout(jP_companyList);
        jP_companyList.setLayout(jP_companyListLayout);
        jP_companyListLayout.setHorizontalGroup(
            jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_companyListLayout.createSequentialGroup()
                .addGroup(jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jP_companyListLayout.createSequentialGroup()
                        .addGap(920, 920, 920)
                        .addComponent(jBtn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jP_companyListLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jBtn_mechanic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_handyman, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_policeStation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_hospital, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_company, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBtn_feedback, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addGroup(jP_companyListLayout.createSequentialGroup()
                                .addComponent(jTF_location)
                                .addGap(18, 18, 18)
                                .addComponent(jBtn_search)))))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jP_companyListLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jL_company)
                .addGap(375, 375, 375))
        );
        jP_companyListLayout.setVerticalGroup(
            jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jP_companyListLayout.createSequentialGroup()
                .addGroup(jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jP_companyListLayout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jBtn_mechanic)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_handyman)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_policeStation)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_hospital)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_company, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jBtn_feedback)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jP_companyListLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jL_company)
                        .addGap(18, 18, 18)
                        .addGroup(jP_companyListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtn_search)
                            .addComponent(jTF_location, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 435, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jBtn_back)
                .addGap(25, 25, 25))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jP_companyList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jP_companyList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_backActionPerformed
        // TODO add your handling code here:
        dispose();
        User user = new User();
        user.setTitle("User Home Page");
        user.setLocationRelativeTo(null); //center the form
        user.setVisible(true);
        //Companies companies = new Companies();
    }//GEN-LAST:event_jBtn_backActionPerformed

    private void jBtn_companyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_companyActionPerformed
        // TODO add your handling code here:
        viewCompany();
    }//GEN-LAST:event_jBtn_companyActionPerformed

    private void jBtn_mechanicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_mechanicActionPerformed
        // TODO add your handling code here:
        viewMechanic();
    }//GEN-LAST:event_jBtn_mechanicActionPerformed

    private void jBtn_handymanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_handymanActionPerformed
        // TODO add your handling code here:
        viewHandyman();
    }//GEN-LAST:event_jBtn_handymanActionPerformed

    private void jBtn_policeStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_policeStationActionPerformed
        // TODO add your handling code here:
        viewPoliceStation();
    }//GEN-LAST:event_jBtn_policeStationActionPerformed

    private void jBtn_hospitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_hospitalActionPerformed
        // TODO add your handling code here:
        viewHospital();
    }//GEN-LAST:event_jBtn_hospitalActionPerformed

    private void jBtn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_searchActionPerformed
        // TODO add your handling code here:
        String location = jTF_location.getText();
        
        if(location != null){
            search();
        }
    }//GEN-LAST:event_jBtn_searchActionPerformed

    private void jBtn_feedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtn_feedbackActionPerformed
        // TODO add your handling code here:
        feedback();
    }//GEN-LAST:event_jBtn_feedbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Companies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Companies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Companies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Companies.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Companies().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtn_back;
    private javax.swing.JButton jBtn_company;
    private javax.swing.JButton jBtn_feedback;
    private javax.swing.JButton jBtn_handyman;
    private javax.swing.JButton jBtn_hospital;
    private javax.swing.JButton jBtn_mechanic;
    private javax.swing.JButton jBtn_policeStation;
    private javax.swing.JButton jBtn_search;
    private javax.swing.JLabel jL_company;
    private javax.swing.JPanel jP_companyList;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF_location;
    private javax.swing.JTable jT_company;
    // End of variables declaration//GEN-END:variables

    //view companies
    private void viewCompany(){
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company");
            //mysql query
            //String sql = "Select * from company";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String email = res.getString("email");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                
                String tbData[] = { company_name, email, serviceType, address, city, state, zipcode};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            System.out.println("There connection is not available");
        }
    }
    
    //view mechanic services
    private void viewMechanic(){
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE service=mechanic");
            //mysql query
            //String sql = "Select  * from company WHERE service=mechanic";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            System.out.println("There connection is not available");
        }
    }
    
    //view handyman services
    private void viewHandyman(){
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE service=handyman");
            //mysql query
            //String sql = "Select  * from company WHERE service=handyman";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            System.out.println("There connection is not available");
        }
    }
    
    //view police stations
    private void viewPoliceStation(){
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE service=police station");
            //mysql query
            //String sql = "Select  * from company WHERE service=police station";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            System.out.println("There connection is not available");
        }
    }
     
    //view hospital services
    private void viewHospital(){
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE service=hospital");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }else{
            System.out.println("There connection is not available");
        }
    }

    //search button
    private void search() {
        Connection conn = DBConnection.connectDB();
        if(conn!=null){
            if(jTF_location!=null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE city=?");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else if(jTF_location != null && jBtn_mechanic != null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE city=? AND serviceType=mechanic");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else if(jTF_location != null && jBtn_handyman != null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE city=? AND serviceType=handyman");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else if(jTF_location != null && jBtn_policeStation != null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE city=? AND serviceType=police station");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else if(jTF_location != null && jBtn_hospital != null){
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company WHERE city=? AND serviceType=hospital");
            //mysql query
            //String sql = "Select  * from company WHERE service=hospital";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                String email = res.getString("email");
                
                String tbData[] = { company_name, serviceType, address, city, state, zipcode, email};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        else{
            try{
            //Statement st = conn.createStatement();
            PreparedStatement pst = (PreparedStatement)conn.prepareStatement("Select  * from company");
            //mysql query
            //String sql = "Select * from company";
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                //data added
                //String jT_company = String.valueOf(res.getInt("jT_company"));
                String company_name = res.getString("company_name");
                String email = res.getString("email");
                String serviceType = res.getString("serviceType");
                String address = res.getString("address");
                String city = res.getString("city");
                String state = res.getString("state");
                String zipcode = res.getString("zipcode");
                
                String tbData[] = { company_name, email, serviceType, address, city, state, zipcode};
                DefaultTableModel tblModel = (DefaultTableModel)jT_company.getModel();
                
                //add string array data into table
                tblModel.addRow(tbData);
            }
            
            conn.close();
        }
        catch (SQLException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
        }else{
            System.out.println("There connection is not available");
        }
    }

    //send feedback button
    private void feedback() {
        int response = JOptionPane.showConfirmDialog(jBtn_feedback, "Please make sure you note down the company's email address before continuing to Feedback", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (response == JOptionPane.YES_OPTION) {
                    dispose();
                    Feedback feedback = new Feedback();
                    feedback.setTitle("Sign In");
                    feedback.setLocationRelativeTo(null); //center the form
                    feedback.setVisible(true);
        }else{
            dispose();
            Companies companies = new Companies();
            companies.setTitle("User Home Page");
            companies.setLocationRelativeTo(null); //center the form
            companies.setVisible(true);
        }
    }
}
